# -*- coding: utf-8 -*-
"""Covid-Detection-VGG16.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DNJDkfA9Ff3Nywp3P5Iega-AE4EduFGy

### **Code by Sayan De(Tec4Tric), Thanks.**


---
"""

from google.colab import drive
drive.mount('/content/drive')

from keras.models import Sequential
from keras.layers import Dropout, Flatten, Dense

import os
import zipfile
from tensorflow.keras.preprocessing.image import ImageDataGenerator

local_zip = '/content/drive/My Drive/corona2.zip' #upload the zip and paste the location here.
zip_ref = zipfile.ZipFile(local_zip, 'r')
zip_ref.extractall('/tmp')
zip_ref.close()

train_dir='/tmp/corona/train'
valid_dir='/tmp/corona/valid'

print(len(os.listdir('/tmp/corona/train/CT_COVID')))
print(len(os.listdir('/tmp/corona/train/CT_NonCOVID')))
print(len(os.listdir('/tmp/corona/valid/CT_COVID')))
print(len(os.listdir('/tmp/corona/valid/CT_NonCOVID')))

from tensorflow.keras.applications import VGG16
vgg = VGG16(weights='imagenet', include_top= False, input_shape=(224,224,3))

model = Sequential()

model.add(vgg)

model.add(Flatten())
model.add(Dropout(0.2))
model.add(Dense(256, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

vgg.trainable = False

train_datagen = ImageDataGenerator(rescale=1./255,
                                  zoom_range=0.2,
                                  width_shift_range=0.2,
                                  height_shift_range=0.2,
                                  horizontal_flip=True,
                                   vertical_flip=True)
train_generator = train_datagen.flow_from_directory(train_dir, batch_size=5, class_mode='binary', target_size=(224,224))

validation_datagen = ImageDataGenerator(rescale=1.0/255.)
validation_generator = validation_datagen.flow_from_directory(valid_dir, batch_size=5, class_mode='binary', target_size=(224,224))

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])

epoch = 50 #@param {type:"slider", min:1, max:100, step:1}

print(f'Epochs: {epoch}...')

history = model.fit(train_generator, epochs=epoch, validation_data=validation_generator)
model.save('vgg.h5')

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib.pyplot as plt

acc=history.history['acc']
val_acc=history.history['val_acc']
loss=history.history['loss']
val_loss=history.history['val_loss']

plt.plot( acc)
plt.plot( val_acc)
plt.title('Training and validation accuracy')
plt.figure()

import numpy as np
from google.colab import files
from keras.preprocessing import image

uploaded = files.upload()

for fn in uploaded.keys():
 
  # predicting images
  path = '/content/' + fn
  img = image.load_img(path, target_size=(224,224,3))
  x = image.img_to_array(img)
  x = np.expand_dims(x, axis=0)
 
  images = np.vstack([x])
  classes = model.predict(images, batch_size=5)

  plt.imshow(img)
  if (classes[0]>0.5):
    plt.title(fn + "  - COVID-19 Negative" )
  else:
    plt.title(fn + "  - COVID-19 Positive" )
  plt.axis("Off")
  plt.show()